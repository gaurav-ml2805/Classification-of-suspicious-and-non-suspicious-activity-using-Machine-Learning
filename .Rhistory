library(shiny); runApp('file_testing.R')
runApp('E:/Project/Network-Intrusion-Detection-System-master/file_testing.R')
library(shiny); source('google.R')
library(shiny); source('google.R')
runApp('data/file_testing.R')
runApp('file_testing.R')
runApp('classification_app')
shiny::runApp()
shiny::runApp()
library(rsconnect)
rsconnect::deployApp('E:\Project\Network-Intrusion-Detection-System-master\classification_app')
rsconnect::deployApp('E:/Project/Network-Intrusion-Detection-System-master/classification_app')
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
anomaly<-read.csv("E:/Project/data/Dataset_Anomaly_AttributeSelection.csv", na.strings=c(".", "NA", "", "?"), strip.white=TRUE, encoding="UTF-8")
aRow<-nrow(anomaly)
aCol<-ncol(anomaly)
#View(anomaly)
sub<-sample(1:aRow,floor(0.75*aRow))
anomalyTrainingSet<- anomaly[sub,]
anomalyTestSet<- anomaly[-sub,]
anomalyClassifier<- glm(anomalyTrainingSet$X..AttackType.~.,data=anomalyTrainingSet, family = binomial("logit"))
anomalyPrediction<-predict(anomalyClassifier, anomalyTestSet[,-aCol])
mmetric(anomalyTestSet$X..AttackType.,anomalyPrediction,c("ACC","PRECISION","TPR","F1"))
barplot(table(anomalyPrediction,anomalyTestSet$X..AttackType.),col=brewer.pal(3,"Set3"))
anomaly<-read.csv("E:/Project/data/Dataset_Anomaly_AttributeSelection.csv", na.strings=c(".", "NA", "", "?"), strip.white=TRUE, encoding="UTF-8")
aRow<-nrow(anomaly)
aCol<-ncol(anomaly)
#View(anomaly)
sub<-sample(1:aRow,floor(0.75*aRow))
anomalyTrainingSet<- anomaly[sub,]
anomalyTestSet<- anomaly[-sub,]
anomalyClassifier<- glm(anomalyTrainingSet$X..AttackType.~.,data=anomalyTrainingSet, family = binomial("logit"))
anomalyPrediction<-predict(anomalyClassifier, anomalyTestSet[,-aCol])
mmetric(anomalyTestSet$X..AttackType.,anomalyPrediction,c("ACC","PRECISION","TPR","F1"))
#barplot(table(anomalyPrediction,anomalyTestSet$X..AttackType.),col=brewer.pal(3,"Set3"))
anomaly<-read.csv("E:/Project/data/Dataset_Anomaly_AttributeSelection.csv", na.strings=c(".", "NA", "", "?"), strip.white=TRUE, encoding="UTF-8")
aRow<-nrow(anomaly)
aCol<-ncol(anomaly)
#View(anomaly)
sub<-sample(1:aRow,floor(0.75*aRow))
anomalyTrainingSet<- anomaly[sub,]
anomalyTestSet<- anomaly[-sub,]
anomalyClassifier<- glm(anomalyTrainingSet$X..AttackType.~.,data=anomalyTrainingSet, family = binomial("logit"))
anomalyPrediction<-predict(anomalyClassifier, anomalyTestSet[,-aCol])
mmetric(anomalyTestSet$X..AttackType.,anomalyPrediction,c("ACC","PRECISION","TPR","F1"))
#barplot(table(anomalyPrediction,anomalyTestSet$X..AttackType.),col=brewer.pal(3,"Set3"))
#install.packages("ada")
library("ada")
library("rminer")
anomaly<-read.csv("E:/Project/Network-Intrusion-Detection-System-master/data/Dataset_Anomaly_AttributeSelection.csv", na.strings=c(".", "NA", "", "?"), strip.white=TRUE, encoding="UTF-8")
aRow<-nrow(anomaly)
aCol<-ncol(anomaly)
sub<-sample(1:aRow,floor(0.75*aRow))
set.seed(101)
anomalyTrainingSet<- anomaly[sub,]
anomalyTestSet<- anomaly[-sub,]
model <- ada(anomalyTrainingSet$X..AttackType.~., data=anomalyTrainingSet, type="discrete")
anomalyPrediction<-predict(model, anomalyTestSet[,-aCol])
#barchart(table(anomalyPrediction,anomalyTestSet$X..AttackType.))
#confusionMatrix(anomalyPrediction,anomalyTestSet[,aCol] )
mmetric(anomalyTestSet$X..AttackType.,anomalyPrediction,c("ACC","PRECISION","TPR","F1"))
print(model)
shiny::runApp()
View(anomalyTestSet)
shiny::runApp()
